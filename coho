#!/usr/bin/env node
VERSION = process.argv[2]
console.log(process.argv[2])
console.log('hi steve')
util = require('util')
exec = require('child_process').exec

child = exec("rm -rf temp && mkdir temp && cd temp && mkdir repositories && mkdir release", function (error, stdout, stderr) {
    console.log('stdout: ' + stdout);
	console.log('stderr: ' + stderr);
    if (error !== null) {
      console.log('exec error: ' + error);
    }
	exec("cd temp/release && mkdir doc && mkdir lib && cd lib && mkdir ios && mkdir android && mkdir blackberry && mkdir windows && mkdir webos && mkdir symbian && mkdir bada", function (error, stdout, stderr) {
	    console.log('stdout: ' + stdout);
		console.log('stderr: ' + stderr);
	    if (error !== null) {
	      console.log('exec error: ' + error);
	    }
	

		//ios
		exec("cd temp/repositories && git clone git@github.com:callback/callback-ios.git && cd callback-ios && git fetch --tags && git checkout "+VERSION, function (error, stdout, stderr) {
	    	console.log('stdout: ' + stdout);
			console.log('stderr: ' + stderr);
	    	if (error !== null) {
	      		console.log('exec error: ' + error);
	    	}
		});

		//blackberry
		exec("cd temp/repositories && git clone git@github.com:callback/callback-blackberry.git && cd callback-blackberry && git fetch --tags && git checkout "+VERSION, function (error, stdout, stderr) {
		    console.log('stdout: ' + stdout);
			console.log('stderr: ' + stderr);
		    if (error !== null) {
		      console.log('exec error: ' + error);
		    }
		});
	
		//symbian
		exec("cd temp/repositories && git clone git@github.com:callback/callback-symbian.git && cd callback-symbian && git fetch --tags && git checkout "+VERSION, function (error, stdout, stderr) {
		    console.log('stdout: ' + stdout);
			console.log('stderr: ' + stderr);
		    if (error !== null) {
		      console.log('exec error: ' + error);
		    }
		});

		//webos
		exec("cd temp/repositories && git clone git@github.com:callback/callback-webos.git && cd callback-webos && git fetch --tags && git checkout "+VERSION, function (error, stdout, stderr) {
		    console.log('stdout: ' + stdout);
			console.log('stderr: ' + stderr);
		    if (error !== null) {
		      console.log('exec error: ' + error);
		    }
		});	
	
		//android
		exec("cd temp/repositories && git clone git@github.com:callback/callback-android.git && cd callback-android && git fetch --tags && git checkout "+VERSION, function (error, stdout, stderr) {
		    console.log('stdout: ' + stdout);
			console.log('stderr: ' + stderr);
		    if (error !== null) {
		      console.log('exec error: ' + error);
		    }
		});
	
		//windows phone
		exec("cd temp/repositories && git clone git@github.com:callback/callback-windows-phone.git && cd callback-windows-phone && git fetch --tags && git checkout "+VERSION, function (error, stdout, stderr) {
		    console.log('stdout: ' + stdout);
			console.log('stderr: ' + stderr);
		    if (error !== null) {
		      console.log('exec error: ' + error);
		    }
		});
	
		//bada
		exec("cd temp/repositories && git clone git@github.com:callback/callback-bada.git && cd callback-bada && git fetch --tags && git checkout "+VERSION, function (error, stdout, stderr) {
		    console.log('stdout: ' + stdout);
			console.log('stderr: ' + stderr);
		    if (error !== null) {
		      console.log('exec error: ' + error);
		    }
		});
	
		//docs
		exec("cd temp/repositories && git clone git@github.com:callback/callback-docs.git && cd callback-docs && git fetch --tags && git checkout "+VERSION, function (error, stdout, stderr) {
		    console.log('stdout: ' + stdout);
			console.log('stderr: ' + stderr);
		    if (error !== null) {
		      console.log('exec error: ' + error);
		    }
		});
	});
});


child.on('exit', function(){
	exec("cd temp/release && git archive master -o phonegap-"+VERSION+".zip", function (error, stdout, stderr) {
	    console.log('stdout: ' + stdout);
		console.log('stderr: ' + stderr);
	    if (error !== null) {
	      console.log('exec error: ' + error);
	    }
	});
});
